'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Webhooks = function () {
  function Webhooks(client) {
    _classCallCheck(this, Webhooks);

    this.client = client;
  }

  _createClass(Webhooks, [{
    key: 'list',
    value: function list() {
      return this.client.get('/webhooks');
    }
  }, {
    key: 'retrieve',
    value: function retrieve(id) {
      return this.client.get('/webhooks/' + id);
    }
  }, {
    key: 'create',
    value: function create(data) {
      return this.client.post('/webhooks', data);
    }
  }, {
    key: 'update',
    value: function update(id, data) {
      return this.client.put('/webhooks/' + id, data);
    }
  }, {
    key: 'delete',
    value: function _delete(id) {
      return this.client.delete('/webhooks/' + id);
    }
  }]);

  return Webhooks;
}();

module.exports = Webhooks;